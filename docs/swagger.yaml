basePath: /api
definitions:
  models.PaginatedResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.Song'
        type: array
      page:
        type: integer
      per_page:
        type: integer
      total:
        type: integer
      total_pages:
        type: integer
    type: object
  models.SimpleSongInput:
    properties:
      group:
        type: string
      song:
        type: string
    type: object
  models.Song:
    properties:
      album:
        type: string
      artist:
        type: string
      createdAt:
        type: string
      duration:
        type: integer
      genre:
        type: string
      id:
        type: integer
      link:
        type: string
      releaseDate:
        type: string
      text:
        type: string
      title:
        type: string
      updatedAt:
        type: string
    type: object
  models.SongUpdate:
    properties:
      album:
        type: string
      artist:
        type: string
      duration:
        type: integer
      genre:
        type: string
      link:
        type: string
      releaseDate:
        type: string
      text:
        type: string
      title:
        type: string
    type: object
  models.Verse:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: integer
      song_id:
        type: integer
      verse_number:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: API для работы с музыкальной библиотекой
  title: Song Library API
  version: "1.0"
paths:
  /songs:
    get:
      consumes:
      - application/json
      description: Получить список песен с возможностью фильтрации
      parameters:
      - description: Название песни
        in: query
        name: title
        type: string
      - description: Исполнитель
        in: query
        name: artist
        type: string
      - description: Альбом
        in: query
        name: album
        type: string
      - description: Жанр
        in: query
        name: genre
        type: string
      - description: Год выпуска
        in: query
        name: year
        type: integer
      - default: 1
        description: Номер страницы
        in: query
        name: page
        type: integer
      - default: 10
        description: Количество элементов на странице
        in: query
        maximum: 100
        name: per_page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PaginatedResponse'
        "400":
          description: Ошибка валидации
          schema:
            type: string
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Получить список песен
      tags:
      - songs
  /songs/create:
    post:
      consumes:
      - application/json
      description: Создать новую песню
      parameters:
      - description: Данные песни
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.SimpleSongInput'
      produces:
      - application/json
      responses:
        "201":
          description: ID созданной песни
          schema:
            additionalProperties:
              type: integer
            type: object
        "400":
          description: Некорректные данные
          schema:
            type: string
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Создать песню
      tags:
      - songs
  /songs/delete:
    delete:
      consumes:
      - application/json
      description: Удалить песню по ID
      parameters:
      - description: ID песни
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Песня успешно удалена
        "400":
          description: Некорректный ID
          schema:
            type: string
        "404":
          description: Песня не найдена
          schema:
            type: string
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Удалить песню
      tags:
      - songs
  /songs/info:
    get:
      consumes:
      - application/json
      description: Получить детальную информацию о песне по исполнителю и названию
      parameters:
      - description: Исполнитель
        in: query
        name: group
        required: true
        type: string
      - description: Название песни
        in: query
        name: song
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Song'
        "400":
          description: Некорректные параметры запроса
          schema:
            type: string
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Получить информацию о песне
      tags:
      - songs
  /songs/update:
    put:
      consumes:
      - application/json
      description: Обновить информацию о песне
      parameters:
      - description: ID песни
        in: query
        name: id
        required: true
        type: integer
      - description: Данные песни
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.SongUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: Песня успешно обновлена
        "400":
          description: Некорректные данные
          schema:
            type: string
        "404":
          description: Песня не найдена
          schema:
            type: string
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Обновить песню
      tags:
      - songs
  /verses:
    get:
      consumes:
      - application/json
      description: Получить список куплетов для конкретной песни
      parameters:
      - description: ID песни
        in: query
        name: song_id
        required: true
        type: integer
      - default: 1
        description: Номер страницы
        in: query
        name: page
        type: integer
      - default: 10
        description: Количество элементов на странице
        in: query
        maximum: 50
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Verse'
            type: array
        "400":
          description: Некорректный ID песни
          schema:
            type: string
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Получить куплеты песни
      tags:
      - verses
swagger: "2.0"
